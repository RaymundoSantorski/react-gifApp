{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","hooks/useFetchGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","idx","ReactDOM","render","document","getElementById"],"mappings":"yMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCShBG,EAjBF,uCAAG,WAAML,GAAN,uBAAAM,EAAA,6DAENC,EAFM,iDAE0CC,UAAUR,GAFpD,+DAGWS,MAAMF,GAHjB,cAGNG,EAHM,gBAIWA,EAASC,OAJpB,uBAIJC,EAJI,EAIJA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT9B,kBAaLM,GAbK,4CAAH,sDCwBEO,EArBM,SAACpB,GAAc,IAAD,EAELR,mBAAS,CAC/BoB,KAAM,GACNS,SAAS,IAJkB,mBAExBC,EAFwB,KAEjBC,EAFiB,KAiB/B,OAVAC,qBAAU,WACNnB,EAAQL,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGtB,CAACrB,IAEGsB,GCJIK,EAbK,SAAC,GAAqB,EAApBX,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC7B,OACI,sBAAKqB,UAAU,yCAAf,UACI,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QC2BDc,EA5BC,SAAC,GAAgB,IAAf/B,EAAc,EAAdA,SAAc,EAECoB,EAAapB,GAA9B0B,EAFgB,EAErBd,KAAWS,EAFU,EAEVA,QAElB,OACI,qCACI,oBAAIO,UAAU,oCAAd,SAAmD5B,IAElDqB,GAAW,mBAAGO,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEQF,EAAKZ,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCYtBgB,EA5BM,WAAM,MAGaxC,mBAAS,CAAC,cAHvB,mBAGhByC,EAHgB,KAGJ1C,EAHI,KASvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ0C,EAAWnB,KAAI,SAACd,EAAUkC,GAAX,OACX,cAAC,EAAD,CAEIlC,SAAUA,GADLA,Y,MChBjCmC,IAASC,OAAQ,cACb,EADa,IAEbC,SAASC,eAAe,W","file":"static/js/main.bee20b0d.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(category => [inputValue, ...category]);\r\n            setinputValue('');\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=e6Sov1xaaqGrrCN126XDLjrprbyKdYfu`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}\r\n\r\nexport default getGifs;","import {useState, useEffect} from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default useFetchGifs;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data:imgs, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    imgs.map(img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid\r\n\r\n","import React, {useState} from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Dragon Ball', 'DeathNote'];\r\n    const [categories, setCategories] = useState(['DeathNote']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories(['Naruto',...categories]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map((category, idx) => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render( <\n    GifExpertApp / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}